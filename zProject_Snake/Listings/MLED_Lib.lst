C51 COMPILER V9.60.7.0   MLED_LIB                                                          01/03/2025 09:54:13 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MLED_LIB
OBJECT MODULE PLACED IN .\Objects\MLED_Lib.obj
COMPILER INVOKED BY: D:\C51V961\C51\BIN\C51.EXE MLED_Lib.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -MLED_Lib.lst) TABS(2) OBJECT(.\Objects\MLED_Lib.obj)

line level    source

   1          /*
   2          Xinyu Liu self-taught 8051 MCU
   3          Description: this is a LED words library, which contains all the animations or pics I need for snake game.
   4          Version@2025/1/3
   5          */
   6          
   7          #include <REGX52.H>
   8          #include <INTRINS.H>
   9          #include "MatrixLED.h"
  10          
  11          xdata unsigned char A_GAMEOVER[] = {0xFF,0x81,0x89,0x8F,0x00,0x3F,0x48,0x88,0xFF,0x00,0xFF,0x40,0x40,0xFF,
             -0x00,0xFF,
  12          0x89,0x89,0x89,0x00,0x00,0xF0,0x90,0xF0,0x00,0xE0,0x10,0xEF,0x0B,0x09,0x00,0x0F,0x0A,0x0D}; //34 + 16
  13          
  14          xdata unsigned char A_SCORE[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x62,0x91,0x89,0x46,0x00,0x7E,0x8
             -1,0x81,0x42,0x00,0x7E,0x89,0x91,0x7E,0x00,0x7F,
  15          0x88,0x94,0x63,0x00,0x7E,0x89,0x89,0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}; //28 + 8
  16          
  17          xdata unsigned char A_numberList[10][4] = {{0x7E,0x89,0x91,0x7E},{0x21,0x41,0xFF,0x01},{0x47,0x89,0x91,0x6
             -1},
  18          {0x42,0x91,0x91,0x7E},{0x18,0x28,0x48,0xFF},{0xF1,0x51,0x51,0x4},{0x7E,0x91,0x91,0x4E},
  19          {0x80,0x8F,0x90,0x60},{0x6E,0x91,0x91,0x6E},{0x62,0x91,0x91,0x7E}};
  20          
  21          xdata unsigned char A_TITLE1[] = {0x1F,0x2C,0x61,0xE1,0xED,0x61,0x20,0x1F};
  22          
  23          xdata unsigned char A_TITLE3[] = {0x1F,0x20,0x21,0x61,0x61,0xE1,0xE0,0x1F};
  24          
  25          xdata unsigned char A_TITLE2[] = {0x1F,0x2C,0x21,0x61,0x6D,0xE1,0xE0,0x1F};
  26          
  27          xdata unsigned char A_WIN[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x0E,0x01,0xFE,0x00,0x81,
             -0xFF,0x81,0x00,0xFF,0x60,0x18,0x06,0xFF,
  28          0x00,0xFD,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
  29          
  30          xdata unsigned char A_SMILE[] = {0x3C,0x42,0xA9,0x85,0xA5,0x89,0x42,0x3C};
  31          
  32          xdata unsigned char A_SAD[] = {0xFF,0x81,0xA5,0x89,0xA9,0x85,0x81,0xFF};
  33          
  34          void MLEDShow_GAMEOVER()
  35          {
  36   1        unsigned int i;
  37   1        unsigned int j;
  38   1        unsigned int rep;
  39   1        for (i = 0; i < 34 - 8; i++)
  40   1        {
  41   2          for (rep = 0; rep < 8; rep++)
  42   2          {
  43   3            for (j = 0; j < 8; j++)
  44   3            {
  45   4              MLED_ShowColumn(j, A_GAMEOVER[j + i]);
  46   4            }
  47   3          }
  48   2        }
  49   1      }
  50          
C51 COMPILER V9.60.7.0   MLED_LIB                                                          01/03/2025 09:54:13 PAGE 2   

  51          void MLEDShow_SCORE(unsigned char score)
  52          {
  53   1        unsigned int i;
  54   1        unsigned int j;
  55   1        unsigned int rep;
  56   1        
  57   1        for (i = 0; i < 34; i++)
  58   1        {
  59   2          for (rep = 0; rep < 8; rep++)
  60   2          {
  61   3            for (j = 0; j < 8; j++)
  62   3            {
  63   4              MLED_ShowColumn(j, A_SCORE[j + i]);
  64   4            }
  65   3          }
  66   2        }
  67   1        
  68   1        for (rep = 0; rep < 300; rep++)
  69   1        {
  70   2          for (j = 0; j < 4; j++)
  71   2          {
  72   3            MLED_ShowColumn(j, A_numberList[score / 10][j]);
  73   3          }
  74   2          
  75   2          for (j = 0; j < 4; j++)
  76   2          {
  77   3            MLED_ShowColumn(j + 4, A_numberList[score % 10][j]);
  78   3          }
  79   2        }
  80   1      }
  81          
  82          void MLEDShow_TITLE()
  83          {
  84   1        unsigned int j;
  85   1        unsigned int rep;
  86   1        
  87   1        for (rep = 0; rep < 100; rep++)
  88   1        {
  89   2          for (j = 0; j < 8; j++)
  90   2          {
  91   3            MLED_ShowColumn(j, A_TITLE1[j]);
  92   3          }
  93   2        }
  94   1        
  95   1        for (rep = 0; rep < 30; rep++)
  96   1        {
  97   2          for (j = 0; j < 8; j++)
  98   2          {
  99   3            MLED_ShowColumn(j, A_TITLE2[j]);
 100   3          }
 101   2        }
 102   1        
 103   1        for (rep = 0; rep < 15; rep++)
 104   1        {
 105   2          for (j = 0; j < 8; j++)
 106   2          {
 107   3            MLED_ShowColumn(j, A_TITLE3[j]);
 108   3          }
 109   2        }
 110   1      }
 111          
 112          void MLEDShow_WIN()
C51 COMPILER V9.60.7.0   MLED_LIB                                                          01/03/2025 09:54:13 PAGE 3   

 113          {
 114   1        
 115   1        unsigned int i;
 116   1        unsigned int j;
 117   1        unsigned int rep;
 118   1        for (i = 0; i < 25; i++)
 119   1        {
 120   2          for (rep = 0; rep < 8; rep++)
 121   2          {
 122   3            for (j = 0; j < 8; j++)
 123   3            {
 124   4              MLED_ShowColumn(j, A_WIN[j + i]);
 125   4            }
 126   3          }
 127   2        }
 128   1      }
 129          
 130          void MLEDShow_SMILE()
 131          {
 132   1        unsigned int j;
 133   1        unsigned int rep;
 134   1        
 135   1        for (rep = 0; rep < 3; rep++)
 136   1        {
 137   2          for (j = 0; j < 8; j++)
 138   2          {
 139   3            MLED_ShowColumn(j, A_SMILE[j]);
 140   3          }
 141   2        } 
 142   1      }
 143          
 144          void MLEDShow_SAD()
 145          {
 146   1        unsigned int j;
 147   1        unsigned int rep;
 148   1        
 149   1        for (rep = 0; rep < 3; rep++)
 150   1        {
 151   2          for (j = 0; j < 8; j++)
 152   2          {
 153   3            MLED_ShowColumn(j, A_SAD[j]);
 154   3          }
 155   2        } 
 156   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    752    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    189    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      31
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
