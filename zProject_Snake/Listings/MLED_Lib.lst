C51 COMPILER V9.60.7.0   MLED_LIB                                                          12/29/2024 08:39:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MLED_LIB
OBJECT MODULE PLACED IN .\Objects\MLED_Lib.obj
COMPILER INVOKED BY: D:\C51V961\C51\BIN\C51.EXE MLED_Lib.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -MLED_Lib.lst) TABS(2) OBJECT(.\Objects\MLED_Lib.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <INTRINS.H>
   3          #include "MatrixLED.h"
   4          
   5          xdata unsigned char A_GAMEOVER[] = {0xFF,0x81,0x89,0x8F,0x00,0x3F,0x48,0x88,0xFF,0x00,0xFF,0x40,0x40,0xFF,
             -0x00,0xFF,
   6          0x89,0x89,0x89,0x00,0x00,0xF0,0x90,0xF0,0x00,0xE0,0x10,0xEF,0x0B,0x09,0x00,0x0F,0x0A,0x0D}; //34 + 16
   7          
   8          xdata unsigned char A_SCORE[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x62,0x91,0x89,0x46,0x00,0x7E,0x8
             -1,0x81,0x42,0x00,0x7E,0x89,0x91,0x7E,0x00,0x7F,
   9          0x88,0x94,0x63,0x00,0x7E,0x89,0x89,0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}; //28 + 8
  10          
  11          xdata unsigned char A_numberList[10][4] = {{0x7E,0x89,0x91,0x7E},{0x21,0x41,0xFF,0x01},{0x47,0x89,0x91,0x6
             -1},
  12          {0x42,0x91,0x91,0x7E},{0x18,0x28,0x48,0xFF},{0xF1,0x51,0x51,0x4},{0x7E,0x91,0x91,0x4E},
  13          {0x80,0x8F,0x90,0x60},{0x6E,0x91,0x91,0x6E},{0x62,0x91,0x91,0x7E}};
  14          
  15          xdata unsigned char A_TITLE1[] = {0x1F,0x2C,0x61,0xE1,0xED,0x61,0x20,0x1F};
  16          
  17          xdata unsigned char A_TITLE3[] = {0x1F,0x20,0x21,0x61,0x61,0xE1,0xE0,0x1F};
  18          
  19          xdata unsigned char A_TITLE2[] = {0x1F,0x2C,0x21,0x61,0x6D,0xE1,0xE0,0x1F};
  20          
  21          xdata unsigned char A_WIN[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x0E,0x01,0xFE,0x00,0x81,
             -0xFF,0x81,0x00,0xFF,0x60,0x18,0x06,0xFF,
  22          0x00,0xFD,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
  23          
  24          xdata unsigned char A_SMILE[] = {0x3C,0x42,0xA9,0x85,0xA5,0x89,0x42,0x3C};
  25          
  26          xdata unsigned char A_SAD[] = {0xFF,0x81,0xA5,0x89,0xA9,0x85,0x81,0xFF};
  27          
  28          void MLEDShow_GAMEOVER()
  29          {
  30   1        unsigned int i;
  31   1        unsigned int j;
  32   1        unsigned int rep;
  33   1        for (i = 0; i < 34 - 8; i++)
  34   1        {
  35   2          for (rep = 0; rep < 8; rep++)
  36   2          {
  37   3            for (j = 0; j < 8; j++)
  38   3            {
  39   4              MLED_ShowColumn(j, A_GAMEOVER[j + i]);
  40   4            }
  41   3          }
  42   2        }
  43   1      }
  44          
  45          void MLEDShow_SCORE(unsigned char score)
  46          {
  47   1        unsigned int i;
  48   1        unsigned int j;
  49   1        unsigned int rep;
  50   1        
C51 COMPILER V9.60.7.0   MLED_LIB                                                          12/29/2024 08:39:34 PAGE 2   

  51   1        for (i = 0; i < 34; i++)
  52   1        {
  53   2          for (rep = 0; rep < 8; rep++)
  54   2          {
  55   3            for (j = 0; j < 8; j++)
  56   3            {
  57   4              MLED_ShowColumn(j, A_SCORE[j + i]);
  58   4            }
  59   3          }
  60   2        }
  61   1        
  62   1        for (rep = 0; rep < 300; rep++)
  63   1        {
  64   2          for (j = 0; j < 4; j++)
  65   2          {
  66   3            MLED_ShowColumn(j, A_numberList[score / 10][j]);
  67   3          }
  68   2          
  69   2          for (j = 0; j < 4; j++)
  70   2          {
  71   3            MLED_ShowColumn(j + 4, A_numberList[score % 10][j]);
  72   3          }
  73   2        }
  74   1      }
  75          
  76          void MLEDShow_TITLE()
  77          {
  78   1        unsigned int j;
  79   1        unsigned int rep;
  80   1        
  81   1        for (rep = 0; rep < 100; rep++)
  82   1        {
  83   2          for (j = 0; j < 8; j++)
  84   2          {
  85   3            MLED_ShowColumn(j, A_TITLE1[j]);
  86   3          }
  87   2        }
  88   1        
  89   1        for (rep = 0; rep < 30; rep++)
  90   1        {
  91   2          for (j = 0; j < 8; j++)
  92   2          {
  93   3            MLED_ShowColumn(j, A_TITLE2[j]);
  94   3          }
  95   2        }
  96   1        
  97   1        for (rep = 0; rep < 15; rep++)
  98   1        {
  99   2          for (j = 0; j < 8; j++)
 100   2          {
 101   3            MLED_ShowColumn(j, A_TITLE3[j]);
 102   3          }
 103   2        }
 104   1      }
 105          
 106          void MLEDShow_WIN()
 107          {
 108   1        
 109   1        unsigned int i;
 110   1        unsigned int j;
 111   1        unsigned int rep;
 112   1        for (i = 0; i < 25; i++)
C51 COMPILER V9.60.7.0   MLED_LIB                                                          12/29/2024 08:39:34 PAGE 3   

 113   1        {
 114   2          for (rep = 0; rep < 8; rep++)
 115   2          {
 116   3            for (j = 0; j < 8; j++)
 117   3            {
 118   4              MLED_ShowColumn(j, A_WIN[j + i]);
 119   4            }
 120   3          }
 121   2        }
 122   1      }
 123          
 124          void MLEDShow_SMILE()
 125          {
 126   1        unsigned int j;
 127   1        unsigned int rep;
 128   1        
 129   1        for (rep = 0; rep < 3; rep++)
 130   1        {
 131   2          for (j = 0; j < 8; j++)
 132   2          {
 133   3            MLED_ShowColumn(j, A_SMILE[j]);
 134   3          }
 135   2        } 
 136   1      }
 137          
 138          void MLEDShow_SAD()
 139          {
 140   1        unsigned int j;
 141   1        unsigned int rep;
 142   1        
 143   1        for (rep = 0; rep < 3; rep++)
 144   1        {
 145   2          for (j = 0; j < 8; j++)
 146   2          {
 147   3            MLED_ShowColumn(j, A_SAD[j]);
 148   3          }
 149   2        } 
 150   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    752    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    189    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      31
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
